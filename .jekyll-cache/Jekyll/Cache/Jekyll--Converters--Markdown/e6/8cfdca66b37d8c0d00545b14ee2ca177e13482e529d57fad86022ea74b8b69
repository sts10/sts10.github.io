I"N¿<p><strong>2020 UPDATE</strong>: The guide below was written back in 2017. While it still may be helpful to some, KeePassXC has changed quite a bit in the last three years, both in functionality and aesthetics (almost universally for the better!). Since this guide may be out-of-date, I‚Äôd recommend their new, <strong>official <a href="https://keepassxc.org/docs/KeePassXC_GettingStarted.html">‚ÄúGetting Started Guide‚Äù</a></strong>.</p>

<h2 id="table-of-contents">Table of Contents</h2>

<p><a href="#what-is-keepassxc">What is KeePassXC?</a></p>
<ul>
  <li><a href="#level-0-starting-out">Level 0: Starting Out</a></li>
  <li><a href="#level-1-getting-setup">Level 1: Getting Setup</a></li>
  <li><a href="#level-2-more-security-tips">Level 2: More Security Tips</a></li>
  <li><a href="#level-3-getting-organized">Level 3: Getting Organized</a></li>
  <li><a href="#level-4-securing-our-database-with-multiple-factors">Level 4: Securing Our Database With Multiple Factors</a></li>
</ul>

<p><a href="#appendix-verifying-your-keepassxc-download-without-using-the-command-line">Appendix A: Verifying Your KeePassXC Download Without Using the Command Line</a></p>

<h2 id="what-is-keepassxc">What is KeePassXC?</h2>

<p><a href="https://keepassxc.org">KeePassXC</a> is an open-source password manager. As the project owners (of which I am not) put it: It is a community fork of <a href="https://www.keepassx.org/">KeePassX</a>, a native cross-platform port of <a href="http://keepass.info/">KeePass Password Safe</a>, with the goal to extend and improve it with new features and bug fixes. KeePassXC is open-source, which means <a href="https://github.com/keepassxreboot/keepassxc">its code</a> is public and thus open to inspection by all.</p>

<p>This is a basic guide of how to get started with KeePassXC. This guide is <strong>for OS X / macOS users</strong> (hereto referred to as ‚ÄúmacOS‚Äù), though KeePassXC is built to work with Linux and Windows as well, and this guide may be helpful for those users too. Another good resource is <a href="https://keepassxc.org/docs#faq">KeePassXC‚Äôs official FAQ page</a>.</p>

<h3 id="disclosure-of-amateurism">Disclosure of Amateurism</h3>

<p>I‚Äôm not a security expert or security professional, just a social media editor who manages a lot of accounts, so buyer beware from this point on. If you spot any errors or have any suggestions for this post, feel free to contact me via <a href="https://twitter.com/sts10">Twitter</a> or <a href="https://gist.github.com/sts10/4a4e01021b3a5ad42e9b73e0abd7b7e3">elsewhere</a>.</p>

<p>Thanks to <a href="https://twitter.com/com">@com</a> for various tips throughout. I‚Äôd also like to note that I drew some inspiration and methodology from <a href="https://medium.com/@mshelton/keypass-for-beginners-dc8adfcdad54">Martin Shelton‚Äôs ‚ÄúKeePass for Beginners‚Äù post</a>, which you may also find useful. I‚Äôll also note that KeePassXC has <a href="https://keepassxc.org/quickstart/">a quickstart guide on their site</a>, as well as <a href="https://github.com/keepassxreboot/keepassxc/wiki">a wiki</a>, and <a href="https://ssd.eff.org/en/module/how-use-keepassxc">the Electronic Freedom Foundation has there own guide to KeePassXC</a>. I‚Äôll also note that KeePassXC is <a href="https://twitter.com/KeePassXC">on Twitter</a>.</p>

<h3 id="how-is-keepassxc-different-from-other-password-managers">How is KeePassXC Different from Other Password Managers?</h3>

<p>KeePassXC is a bit different from other password managers like <a href="https://1password.com/">1Password</a> or <a href="https://www.lastpass.com/">LastPass</a> in that it simply creates and manages an encrypted password database that lives on your computer like any other file. In other words, by default it is a local or ‚Äúoffline‚Äù password manager, while 1Password, LastPass, and their ilk can be thought of as ‚Äúcloud-based‚Äù password managers.</p>

<p>There are some convenient methods to ‚Äúsync‚Äù your KeePass password database with other devices (I go over some options below), but ‚Äúout of the box‚Äù your passwords simply live on your computer in an encrypted file that you can only open with a master password.</p>

<p>Also note that, unlike 1Password and other options, KeePassXC is free (as in costs zero dollars), and its code is open-source. However, know that there is no company behind the product to offer formal support, as you might be used to with other products.</p>

<p><strong>NOTE</strong>: Some screenshots and GIFs in this guide are from previous version of KeePassXC (only because I‚Äôm too lazy to remake them for the later versions. Please use the latest release version of KeePassXC.</p>

<h2 id="level-0-starting-out">Level 0: Starting Out</h2>

<h3 id="downloading-keepassxc">Downloading KeePassXC</h3>

<p>First, let‚Äôs head over to the KeePassXC‚Äôs <a href="https://keepassxc.org/download">Download page</a>.</p>

<p><img src="/img/keepassxc/download-page-screenshot.png" alt="KeePassXC Download page, with macOS selected" /></p>

<p>Select your desired operating system (the current options are Linux, macOS, and Windows), or to compile KeePassXC from source code. If we‚Äôre using macOS, we‚Äôll go to the ‚ÄúmacOS‚Äù tab and click the link labeled ‚ÄúBinary bundle for macOS 10.12 and later‚Äù to download the latest macOS release of KeePassXC to our computer.</p>

<h3 id="verifying-our-download">Verifying our Download</h3>

<p>Before you install KeePassXC from this downloaded file, <strong>it is recommended that you verify your download</strong>. By verifying the signatures of your KeePassXC download, you can prove the authenticity and integrity of the downloaded file. This guarantees that the file you just downloaded was originally created by the KeePassXC Team and that its contents haven‚Äôt been tampered with on the way to your hard drive.</p>

<p>If you‚Äôre comfortable using the command line, you can learn how to verify your download on <a href="https://keepassxc.org/verifying-signatures">the Verifying Signatures page</a> of the KeePassXC website.</p>

<p>If you‚Äôre not comfortable pasting commands into Terminal, no worries. Scroll down to the <a href="#appendix-verifying-your-keepassxc-download-without-using-the-command-line">Appendix</a> at the bottom of this post for instructions of how to verify your KeePassXC download without using the command line.</p>

<h3 id="installing-keepassxc-on-macos">Installing KeePassXC on macOS</h3>

<p>Now that we‚Äôve downloaded and verified our .dmg file, simply double click it to mount the disk image.  Next drag the KeePassXC icon into you Applications folder.</p>

<p><img src="/img/keepassxc/install.gif" alt="Installation" /></p>

<p>KeePassXC should now be installed on your computer.</p>

<h2 id="a-general-overview-of-how-keepassxc-works-as-a-password-manager">A general overview of how KeePassXC works as a password manager</h2>

<p>As we have learned, KeePassXC is a password manager‚Äì it saves your passwords (and associated usernames) securely for you. Before we go any further, lets talk a bit about how KeePassXC works.</p>

<p>We‚Äôre going to use KeePassXC, an application, to create and edit KeePass password databases. It may be helpful to think of it like Microsoft Excel: You use Excel to create and edit files on your computer. These files are spreadsheets. Similarly, KeePassXC enables us create and edit files on our computer that are databases of usernames and passwords.</p>

<p>Of course one significant difference between Excel and KeePassXC is that KeePassXC database files are always encrypted when not in use. To access them, you first open the database using KeePassXC (just as you would open a spreadsheet with Excel), at which point you must enter the ‚Äúmaster key‚Äù, which is usually a long master password, in order to access the database.</p>

<p>So let‚Äôs create a KeePass database and see how we use it to save and manage passwords securely.</p>

<h2 id="level-1-getting-setup">Level 1: Getting Setup</h2>

<p>Now that KeePassXC is installed on our machine, let‚Äôs create a password database.</p>

<h3 id="creating-a-password-database">Creating a Password Database</h3>

<p><img src="/img/keepassxc/welcome-screen.png" alt="KeePassXC 2.4.0 welcome screen" /></p>

<p>When we launch KeePassXC for the first time, we‚Äôre greeted with the screen above. Since we don‚Äôt have any databases yet, let‚Äôs click the ‚ÄúCreate new database‚Äù button.</p>

<p><img src="/img/keepassxc/create-database.png" alt="Name your new database" /></p>

<p>First, we‚Äôre asked to choose a name and, optionally, a description for our passwords database. I just called mine ‚ÄúMy Passwords‚Äù.</p>

<p>Next, we‚Äôre asked about some encryption settings. I highly recommend leaving the defaults settings as they are. Do <strong>not</strong> choose a decryption time under 1.0 seconds. I don‚Äôt recommend even going into ‚ÄúAdvanced Settings‚Äù (at this point).</p>

<p><img src="/img/keepassxc/encryption-settings.png" alt="Encryption settings" /></p>

<p>Next, we‚Äôre asked to set up a master key. In our case, for now, this will just be a password or <em>passphrase</em>.</p>

<p><img src="/img/keepassxc/master-password-blank.png" alt="Setting master key" /></p>

<p>Since this password is the key that opens the metaphorical door to all of our passwords, we want to make this password very hard to guess. For this reason I recommend using as <em>passphrase</em> of about six random words. Some examples ‚Äúpushiness earthly snowsuit overcast agile unlinked‚Äù or ‚Äústadium bazooka pastime battery survey scorpion‚Äù (do not choose these exact ones because, lol, they‚Äôre on the internet now).</p>

<p>Thankfully, KeePassXC has a built-in tool to randomly generate passphrases for us. Just click the die icon on the right side of this screen, and the password generator will appear. Since we want to generate a passphrase, click the ‚ÄúPassphrase‚Äù tab.</p>

<p><img src="/img/keepassxc/master-passphrase-generator.png" alt="Setting master key" /></p>

<p>Once we have one we like, <strong>write this passphrase down on a piece of paper</strong>, and keep it somewhere safe. It‚Äôs <strong>very important not to lose this passphrase</strong> ‚Äì KeePassXC does not have a reset mechanism for this.</p>

<p>Eventually you should memorize this phrase ‚Äì it‚Äôs not as hard as it seems. For example, one trick is to <a href="https://www.xkcd.com/936/">create a little story about them</a> in your head about them.</p>

<p>When you‚Äôve got it written down somewhere safe, click Done.</p>

<p><img src="/img/keepassxc/master-password.png" alt="Setting master key" /></p>

<p>Congrats ‚Äì You‚Äôve made your first KeePass database.</p>

<h3 id="creating-your-first-entry">Creating your first entry</h3>

<p>Let‚Äôs add our first entry. As an example, let‚Äôs say we want to store our Reddit username and password.</p>

<p>First, find the button with the key and the green downward arrow.</p>

<p><img src="/img/keepassxc/blank-add-new-entry.png" alt="Add new entry button" /></p>

<p>We‚Äôll be presented with an interface to create our new entry. Let‚Äôs fill in a title (Reddit), Username (our Reddit username), our Reddit password twice, and then the URL of the site (https://www.reddit.com), which you can of course paste in.</p>

<p><img src="/img/keepassxc/entry-creation.gif" alt="Our first entry" /></p>

<p>If you want to view your password, you can click the button with the eye icon on the right.</p>

<p>As mentioned, KeePassXC has the ability to generate random passwords for us, which we can do by clicking the black die icon. We‚Äôll go over that below, but for now let‚Äôs pretend we‚Äôre simply storing your existing password that you hopefully know by heart (but won‚Äôt have to for much longer!).</p>

<p>Once we‚Äôve filled in this basic information, we‚Äôll click the OK button to create this new entry in our password database. We‚Äôll now see our new entry in our database.</p>

<p><img src="/img/keepassxc/one-entry.png" alt="one little entry" /></p>

<h3 id="save-your-database-and-give-it-a-file-name">Save your Database, and give it a file name</h3>

<p>Now would be a great time to save our database for the first time. To do this, either click the button with floppy disk icon or go to Database &gt; Save database. Choose a file name for your database, being sure to keep the <code>.kdbx</code> file extension. ‚Äúmy_passwords.kdbx‚Äù is a fine example. Then choose where you want to save your database.</p>

<p>Remember, your database file will be encrypted, so you don‚Äôt have to obfuscate the databases name or location. That said, there are obviously some security-vs.-convenience trade-offs to, say, keeping your database off of cloud services like Dropbox, or on USB sticks you keep safe.</p>

<h3 id="logging-in-to-reddit">Logging in to Reddit</h3>

<p>OK now let‚Äôs actually use KeePassXC to log in to Reddit. KeePassXC has a few ways to do this‚Äì we‚Äôll start with the simplest.</p>

<h4 id="basic-copy-and-paste">Basic Copy and Paste</h4>

<p>Let‚Äôs open <a href="https://redditcom">https://reddit.com</a> in a browser. With KeePassXC open to the side and our lone entry highlighted (single clicking it), click the person + paper icon to copy your Reddit username to the clipboard. Go paste that into the Reddit login page. Then return to KeePassXC to click the lock + paper icon to copy your Reddit password to your clipboard. Paste that into the Reddit login page, and click the ‚ÄúLOG IN‚Äù button (or press enter).</p>

<p>(In the GIFs below I actually log in from the page <a href="https://reddit.com/login">https://reddit.com/login</a>. I did this to make the GIFs a little cleaner‚Äì these procedures should work in either form.)</p>

<p><img src="/img/keepassxc/reddit-login.gif" alt="log in gif 1" /></p>

<p>There are keyboard shortcuts to make this process slightly quicker. For example, on macOS, <code class="language-plaintext highlighter-rouge">Command + b</code> will copy the highlighted entry‚Äôs username to your clipboard. <code class="language-plaintext highlighter-rouge">Command + c</code> will copy the entry‚Äôs password.</p>

<h4 id="auto-type-a-more-convenient-login-workflow">Auto-Type: A more convenient login workflow</h4>

<p>KeePassXC has a feature called Auto-Type that, as the name implies, automatically types your username and password into a form.</p>

<p><strong>Note</strong>: If you‚Äôre using MacOS Mojave, you‚Äôll need to go to Mac Settings &gt; Security &amp; Privacy &gt; Privacy &gt; Accessibility and allow KeePassXC to control your computer in order to use Auto-Type. More information <a href="https://github.com/keepassxreboot/keepassxc/issues/2349#issuecomment-427660472">here</a>.</p>

<p>One way to use Auto-Type is the Auto-Type button in the toolbar. To perform an Auto-Type using this button, start with your cursor in the username field of the browser form you want to sign in to. Then, over in KeePassXC, single-click the entry you want to Auto-Type and then click the Auto-Type button. KeePassXC will type your username, hit tab, type your password, and then hit enter.</p>

<p>Alternatively you can <em>right-click</em> the entry you want to Auto-Type and select ‚ÄúPerform Auto-Type‚Äù (see slightly outdated GIF below).</p>

<p><img src="/img/keepassxc/auto-type.gif" alt="autotype gif" /></p>

<p>(Note that the Auto-Type keyboard shortcut on macOS is <code class="language-plaintext highlighter-rouge">Command + v</code>.)</p>

<p><code class="language-plaintext highlighter-rouge">{USERNAME}{TAB}{PASSWORD}{ENTER}</code> is the default Auto-Type sequence. However you can edit this sequence on a per-group or per-entry level.</p>

<p>To edit the Auto-Type sequence for a single entry, we‚Äôll first choose to edit the entry‚Äì we can do this by clicking on the entry we want to edit and then clicking button with the key and blue pen icon. Next, we‚Äôll look in the menu of large icons on the left side of the window and click on the Auto-Type section of the menu (you may have to scroll down a little). Finally, we‚Äôll click the ‚ÄúUse custom Auto-Type sequence‚Äù radio button and write a custom Auto-Type sequence. (You can find more info on writing these custom sequences <a href="https://github.com/keepassxreboot/keepassxc/wiki/Autotype-Custom-Sequence">in the KeePassXC wiki</a> and <a href="http://keepass.info/help/base/autotype.html#autoseq">on the original KeePass‚Äôs website</a>.)</p>

<p><img src="/img/keepassxc/custom-auto-type-sequence.png" alt="Custom Auto-type sequence" /></p>

<p><strong>BONUS Tip:</strong> If you use multiple ‚Äúspaces‚Äù or multiple physical displays with macOS, you‚Äôll want to allow KeePassXC to access all of your desktops. This will allow you to use Auto-Type even if KeePassXC and your browser window are on different monitors or desktops.</p>

<p><img src="/img/keepassxc/all-desktops.png" alt="Allow on all desktops" /></p>

<p>To enable this, right-click on the KeePassXC icon in your dock, go to Options, and click on ‚ÄúAll Desktops‚Äù.</p>

<h4 id="global-auto-type">Global Auto-Type</h4>

<p>KeePassXC also has a <em>Global</em> Auto-Type feature which allows us to create a global (i.e. operating-system wide) keyboard shortcut to Auto-Type information from a KeePassXC entry.</p>

<p>For this example, let‚Äôs say we want to set our Global Auto-Type shortcut to <code class="language-plaintext highlighter-rouge">Control + Option + v</code>. To do this, we‚Äôll go to KeePassXC menu (in the way top left of your screen, next to the Apple icon), then click Preferences to get to the ‚ÄúApplication Settings‚Äù menu. We‚Äôll be taken to the ‚ÄúGeneral‚Äù settings menu. Next, click the ‚ÄúAuto-Type‚Äù tab (located in the center of the window to the right of ‚ÄúBasic Settings‚Äù). Finally, left-click inside the text box to the right of the text that says ‚ÄúGlobal Auto-Type shortcut‚Äù. You may not see a cursor appear‚Äì that‚Äôs OK. Just hit your key combination‚Äì in our example that‚Äôs <code class="language-plaintext highlighter-rouge">Control + Option + v</code>.</p>

<p>If you do all that successfully you‚Äôll be looking at a screen like the one below.</p>

<p><img src="/img/keepassxc/global-auto-type.png" alt="Set global Auto-Type shortcut" /></p>

<p>Hit the OK button in the bottom-right corner.</p>

<p>Awesome‚Äì now let‚Äôs use our Global Auto-Type shortcut.</p>

<p>Now that we‚Äôve set this shortcut here‚Äôs the workflow to perform the Auto-Type:</p>

<p>With our KeePassXC database open and <strong>unlocked</strong>, place your cursor in the username field of a browser form. Then hit the Global Auto-Type shortcut (which, if you followed our example, is <code class="language-plaintext highlighter-rouge">Control + Option + v</code>). KeePassXC should then find the right entry based on its title and URL and fill it in for you.</p>

<p><strong>Note</strong>: For Reddit in particular, I‚Äôve found that using <a href="https://www.reddit.com/login">https://www.reddit.com/login</a>, as opposed to https://reddit.com, works better for <em>Global</em> Auto-Type.</p>

<!-- With the shortcut set (and it doesn't have to be `Control + Option + v` of course), whenever our KeePassXC database is unlocked we can use the shortcut to Auto-Type our usernames and passwords, much like the normal Auto-Type functionality described above. -->

<p>One nice advantage to the Global Auto-Type is that KeePass will find the relevant entry based on the entry title and URL, as opposed to having to find it ourselves as the normal AutoType workflow described above requires. If you have more than entry for a given service‚Äì say a Google/gmail account for work and another for personal use‚Äì KeePassXC will ask you which one you want it to Auto-Type.</p>

<h4 id="browser-autofill-with-extensions">Browser autofill with extensions</h4>

<p>In addition to Auto-Type, KeePassXC offers another way to quickly and easily enter your login information into a browser form called KeePassXC-Browser. KeePassXC has browser extensions for both Firefox and Chrome ‚Äì you can learn more about it in <a href="https://keepassxc.org/docs/keepassxc-browser-migration/">the KeePassXC official docs</a>.</p>

<h3 id="keepassxc-settings">KeePassXC Settings</h3>

<p>To access the KeePassXC settings menu on macOS, click the ‚ÄúKeePassXC‚Äù menu in the top-left of your screen and click Preferences.</p>

<p>While the default settings are pretty good, I‚Äôd strongly recommend you confirm that two settings in particular are turned on. I‚Äôd recommend enabling ‚ÄúSafely save database files‚Äù (because of <a href="https://twitter.com/KeePassXC/status/1110700606283571202">this bug</a> ‚Äì <a href="https://github.com/keepassxreboot/keepassxc/issues/2888">more info</a>) and ‚ÄúBackup database file before saving‚Äù, which creates a copy of your database in the same directory as your database, but named <code class="language-plaintext highlighter-rouge">&lt;your-database-name&gt;.old.kdbx</code>. (While this feature may save you in a pinch, see the section below for more of my tips on backing up your database.)</p>

<p>Below are the settings I generally use (with KeePassXC version 2.4.0):</p>

<p><img src="/img/keepassxc/settings.png" alt="KeePassXC Settings" /></p>

<h3 id="locking-your-database">Locking your database</h3>

<p>If you‚Äôre stepping away from your computer, it‚Äôs wise to lock your KeePass database. To do this, go to Tools &gt; Lock database (or hit <code class="language-plaintext highlighter-rouge">Command + l</code>). Once locked, you‚Äôll have to enter your master password to unlock your database.</p>

<p><img src="/img/keepassxc/lock-database.gif" alt="Lock it down" /></p>

<p>Note that you can set KeePassXC to lock your databases after a specific number of seconds of inactivity by going to KeePassXC Preference &gt; Security.</p>

<p><img src="/img/keepassxc/set-lock-time.png" alt="auto lock setting" /></p>

<h3 id="migrating-from-another-password-manager-to-keepassxc">Migrating from another password manager to KeePassXC</h3>

<p>If you‚Äôre moving to KeePassXC from another password manager, you‚Äôll likely want to convert your collection of passwords into a KeePass database file, which has the file extension <code>.kdbx</code>.</p>

<p>The easiest way to do this is to export your previous database to a CSV file (stands for Comma Separated Values‚Äì this file will be <em>unencrypted</em>, so be careful with it), then, in KeePassXC, go to Database menu &gt; Import &gt; ‚ÄúImport from CSV file‚Ä¶‚Äù Once it‚Äôs all imported and your new KeePass database is all set and you save it, you‚Äôll very likely want to delete the unencrypted CSV file.</p>

<h2 id="level-2-more-security-tips">Level 2: More Security Tips</h2>

<p>We‚Äôll now look at some further setting and practices that can make your usage of KeePassXC even more secure. I‚Äôve tried to put the required basics in the sections above‚Äì this is the sort-of optional-but-good-to-do things.</p>

<h3 id="generating-random-passwords-for-your-accounts">Generating random passwords for your accounts</h3>

<p>One of the best benefits of using a password manager like KeePassXC is that, since you only have to remember one master password and can forget your individual account passwords, you can use long unique, random passwords for each service you use. <a href="https://twitter.com/mshelton">Martin Shelton</a>, a user and security researcher, explained the benefits of random, unique passwords succinctly in <a href="https://medium.com/@mshelton/password-managers-for-beginners-d1f49866f80f">a Medium post about password managers</a>:</p>

<blockquote>
  <p>If you use the same password everywhere, a hacker only needs to get your password once in order to break into many of your online accounts‚Ä¶ For example, Yahoo recently announced that <a href="http://www.pbs.org/newshour/rundown/500-million-yahoo-accounts-hit-hackers-company-confirms/">passwords for 500 million Yahoo users were breached in 2014</a>. Imagine if an attacker used your single, easy-to-remember password to access your health care records, your home address, credit card numbers, or your social security number‚Ä¶ To minimize the damage from a breach, you should use unique passwords on each account. But it can be a challenge to remember each password.</p>
</blockquote>

<p>KeePassXC has a built-in random password generator just for creating passwords you‚Äôll likely never have to memorize.</p>

<p>Let‚Äôs say we‚Äôre creating a new GitHub account and want to store our username and password in our KeePass database. First, we‚Äôll create an entry for GitHub and create a random password for our yet-to-be-created GitHub account.</p>

<p><img src="/img/keepassxc/new-random-entry.gif" alt="Creating a new entry with a randomly generated passphrase" /></p>

<p>First, we‚Äôll hit the button that looks like a key with a green down arrow to create a new entry. Then fill out the title and username as we did above. However now, instead of just typing in our existing password (or making one up), we‚Äôre going to use KeePassXC‚Äôs password generator to create a random password for our yet-to-be-created GitHub account.</p>

<p>The password generator has a few options. First, we can choose between a ‚ÄúPassword‚Äù (a series of random characters) and a ‚ÄúPassphrase‚Äù (a series of random words). Passphrases have to be longer in length to be as secure as passwords, but they may be easier for you to remember and type in on a mobile device.</p>

<p>If we were <strong>creating a random password</strong>, we have a number of options. We can increase or decrease the length, choose to include or exclude uppercase letters, lowercase letters, numbers, or special characters. And we can even choose to ‚Äúexclude look-alike characters‚Äù and whether to ‚ÄúPick characters from every group‚Äù. Most of these options exist to help you, the user, get around password requirements like ‚Äúmust contain at least one number and one uppercase letter‚Äù or ‚Äúcannot include any special characters‚Äù, etc.</p>

<p>If we‚Äôre <strong>creating a random passphrase</strong>, we can only select length and the word separator. For length, 6 or 7 is usually fine (watch the password strength meter). For the word separator, I personally prefer a hyphen, but that can be your call (you likely won‚Äôt ever have to type this passphrase in by hand anyway).</p>

<p>Once you‚Äôve got a password or phrase you like and that meets the service‚Äôs requirements (in our case, GitHub), hit the Apply button to set your new password or passphrase. Then hit OK to store your entry. Click the floppy disk icon to save your database.</p>

<p>Now go to <a href="https://github.com/join?source=header-home">GitHub‚Äôs sign-up page</a> and create a new account with the username and password we just saved in your database.</p>

<h3 id="changing-your-master-password-hopefully-to-a-long-random-passphrase">Changing your master password (hopefully to a long, random passphrase)</h3>

<p>As we saw when we were creating our first KeePass database, we can also use KeePassXC‚Äôs built-in password generator to generate a random passphrase to be used as our master password. Since you actually have to type in this password, it makes more sense to use a passphrase than a password.</p>

<p>If, for whatever reason, you didn‚Äôt make your master password (or master key) a randomly generated passphrase, or you just want to change your master password, let‚Äôs go over how to do that.</p>

<p>To change the master password of an existing KeePass database, go to the ‚ÄúDatabase‚Äù menu and hit the button that says ‚ÄúChange Password‚Äù.</p>

<p><img src="/img/keepassxc/change-master-key2.png" alt="Menu option for changing your database's master key" /></p>

<p>Next click the black die icon to generate a new random passphrase. Once you‚Äôve got a 6-or-more word passphrase with your desired word separator, write your new passphrase on a piece of paper and keep it somewhere safe.</p>

<p>NOTE: It‚Äôs very important to know that you‚Äôre going to need to remember this passphrase (as it‚Äôs not going to be stored in your KeePass database). Basically, <strong>don‚Äôt actually change your master password to the generated passphrase unless you have it written down somewhere or memorized.</strong></p>

<p>One trick for remembering your new passphrase is to <a href="https://www.xkcd.com/936/">create a little story about them</a> in your head about them.</p>

<p><img src="https://imgs.xkcd.com/comics/password_strength.png" alt="XKCD long passprhases" /></p>

<h3 id="backing-up-your-database">Backing Up Your Database</h3>

<p>Now we‚Äôve got a nice and secure database with all of our important password in it, some of which you won‚Äôt possibly be able to remember without your database. But what if you lose your database file? To protect ourselves from this, we‚Äôre going to periodically create back-up copies of our database.</p>

<p>To do this, we‚Äôll copy our database file  (the file extension of which is <code class="language-plaintext highlighter-rouge">.kdbx</code>) somewhere safe as a back-up. This could be a USB drive, an external harddrive, a second computer, or even a cloud-based storage solution like DropBox. Remember: this database is well encrypted, so even if an attacker gets a hold of it, they‚Äôll need to know your master password to get access to your information.</p>

<p>Note that unless you employ one of the syncing options listed below, you‚Äôll have to manually keep this back-up copy of your database up-to-date. That means periodically replacing your back-up copy with a fresh copy of your database.</p>

<h2 id="level-3-getting-organized">Level 3: Getting Organized</h2>

<h3 id="syncing-options">Syncing options</h3>

<p>If you want keep you KeePass database synchronized across multiple devices, you‚Äôll need to share your database between those devices. The easiest way to do that is to use a cloud storage service like <a href="https://www.google.com/drive/download/">Google Drive</a>, <a href="https://www.dropbox.com/">Dropbox</a>, or iCloud. You simply move your KeePass database (which, remember, is well-encrypted) into a folder on your Google Drive or Dropbox.</p>

<p>If you‚Äôre wary of your password database being stored on servers you don‚Äôt own, you can explore other options like <a href="https://syncthing.net/">Syncthing</a>, a program that keeps a folder or multiple folders ‚Äúin-sync‚Äù across multiple computers that you own (think Dropbox but without the Dropbox server involved.) However note that Syncthing involves a bit more set up (I wrote <a href="https://sts10.github.io/2017/05/24/getting-started-with-syncthing.html">a getting started guide to Syncthing a few weeks ago</a> if you want a quick preview of what you‚Äôd be getting into).</p>

<p>To access your passwords from a smartphone, you‚Äôll need to use an app that can open KeePass databases. There are a handful of such apps for both iOS and Android, but I haven‚Äôt used any of them so I won‚Äôt comment further. However I will note that, when I asked the KeePassXC developers who run their Twitter account what the recommended, <a href="https://twitter.com/KeePassXC/status/1110913358616817664">they said</a> <a href="https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;hl=en">Keepass2Android</a> for Android and <a href="https://strongboxsafe.com/">Strongbox</a> for iOS. Others recommend <a href="https://www.keepassdx.com/">KeePassDX</a> for Android users.</p>

<h4 id="troubleshooting-syncing">Troubleshooting Syncing</h4>

<p>Note that KeePassXC 2.3.0 added a new setting called ‚ÄúSafely save database files‚Äù. If you‚Äôre having trouble syncing your database you may want to try disabling this feature. You can read more about this issue and setting <a href="https://github.com/keepassxreboot/keepassxc/issues/197">here</a>.</p>

<h3 id="using-groups">Using Groups</h3>

<p>As you‚Äôve likely noticed, on the left-hand side of KeePassXC there‚Äôs a folder tree. Using these folders, you can keep your accounts organized in groups like ‚Äúwork‚Äù, ‚Äúfinance‚Äù and whatever other categories you like.</p>

<p><img src="/img/keepassxc/groups.png" alt="groups" /></p>

<p>You can later drag entries in and out of groups. You can even create groups within groups.</p>

<h3 id="downloading-favicons">Downloading Favicons</h3>

<p>To beautify your KeePass database even further, you can automatically download the favicon (usually the service‚Äôs logo) from the website of the service.</p>

<p>To do this, edit an entry, then click the ‚Äúicon‚Äù button on the left. While you can select from any of the default options, you can also click the ‚ÄúDownload favicon‚Äù button in the bottom right. Be sure to have the full URL of the service in your entry (in this case <code class="language-plaintext highlighter-rouge">https://github.com/</code>), so KeePassXC knows where to download the favicon from.</p>

<p><img src="/img/keepassxc/custom-icon.png" alt="custom icon" /></p>

<p>Once the favicon downloads (it might take a second), be sure to select it and then hit ‚ÄúOK‚Äù to save the changes to the entry.</p>

<h3 id="search">Search</h3>

<p>KeePassXC, as you may have already observed by this point, has search functionality via a text field in the top right of the program. As of KeePassXC v 2.2.0 it searches all of your folders, regardless of which folder you‚Äôre currently in, which is nice.</p>

<p>On a Mac it can be invoked by the familiar <code class="language-plaintext highlighter-rouge">Command + f</code> keyboard shortcut.</p>

<p>As of version 2.4.0, KeePassXC has an advanced search feature. You can learn more about it by clicking the question mark in the search bar.</p>

<h3 id="storing-totp-codes-in-your-keepass-database">Storing TOTP codes in your KeePass database</h3>

<p>If you have two-factor authentication enabled on some of your accounts (which I whole heartedly recommend!), you may be using an app like Google Authenticator on your phone to display 6-digit codes that act as your second-factor. These are <a href="https://en.wikipedia.org/wiki/Time-based_One-time_Password_algorithm">time-based one-time passcodes (TOTP)</a>.</p>

<p>KeePassXC can store and handle these TOTP codes for you. Note that this is a security trade-off: if you store your regular password <em>and</em> your TOTP code in the same KeePass database, anyone who gets into that database will have both of your authentication factors‚Ä¶ so it‚Äôs kind of like it‚Äôs down to one-factor authentication. As 1Password <a href="https://blog.1password.com/totp-for-1password-users/">noted in a blog post when they introduced a similar feature</a>:</p>

<blockquote>
  <p>If you would like to turn a site‚Äôs offering of TOTP into true two-factor security, you should not store your TOTP secret in 1Password (or in anything that will synchronize across systems). Furthermore, you should not use the regular password for the site on the same device that holds your TOTP secret‚Ä¶ Put simply: the device that holds your TOTP secret should never hold your password if your aim is genuine two factor security.</p>
</blockquote>

<p>So all that said here‚Äôs how to do this in KeePassXC. Let‚Äôs say I want to store my TOTP code for my Slack account in my KeePass database. First, if you haven‚Äôt yet, make a new entry for Slack in your database, just like we did with our Reddit account above. Enter the password if you like.</p>

<p>When you turn on two-factor authentication in a service like Slack, you‚Äôd select TOTP as your desired second factor (as opposed to SMS). Usually you‚Äôre then presented with a QR code to point your phone at. Unfortunately, as far as I know, KeePassXC <strong>requires an alphanumeric ‚Äúkey‚Äù instead of a QR code</strong>. (There are ways of getting this key from a QR code, but the only sure way I know involves using the command line and a tool called <code class="language-plaintext highlighter-rouge">zbar</code> ‚Äì I <a href="https://sts10.github.io/2018/11/26/totp-uris-qr-codes-2-factor.html">wrote about that here</a>.)</p>

<p>Once you have the key, go back to KeePassXC and right-click your Slack entry, hover over the ‚ÄúTOTP‚Ä¶‚Äù option, and click ‚ÄúSet up TOTP‚Ä¶‚Äù</p>

<p><img src="/img/keepassxc/totp-menu.png" alt="TOPT menu" /></p>

<p>Enter your key into the presented form, and specify custom settings if needed (I have found the default settings are usually right).</p>

<p><img src="/img/keepassxc/totp-setup.png" alt="TOPT set up" /></p>

<p>Once your TOTP code is set up, KeePassXC allows you to do a number of useful things: copy the TOTP code, show the code, and even show the TOTP QR code. Since KeePassXC can show the QR code, it makes KeePassXC a good choice for a place to back-up these TOTP codes. Then, if you lose your phone, you can quickly and easily generate QR Codes to enter into a new phone‚Äôs authenticator app.</p>

<h2 id="level-4-securing-our-database-with-multiple-factors">Level 4: Securing our database with multiple factors</h2>

<p>As we‚Äôve learned, KeePassXC lets us lock our database behind a master password. However we can also require those who wish to open our database to have other factors as well.</p>

<h3 id="key-file">Key File</h3>

<p>The simpler example of a second factor is a key file. A key file is a file that needs to be present for the database to be opened. It‚Äôs not your database file‚Äì it‚Äôs usually just a text file with a bunch of random characters.</p>

<p>On its face, this may seem not very useful. If an attacker has access to your database file, they likely have access to other files on your computer. However things get more interesting if, for example, you have your database on your computer‚Äôs hard drive but you have your key file on a USB flash drive. With this setup, you‚Äôll need to enter your master password AND have the USB stick plugged into the computer to open your database.</p>

<p>A second example of where a key file could potentially give you more security is: if you store your database file on a cloud service (DropBox, Google Drive, etc.) to more easily keep it in sync between devices, you could create a key file that is never shared on the cloud service (you‚Äôd move it around via USB stick or something similar). Since the key file never changes, you don‚Äôt have to keep in sync‚Äì just get it on each device at setup time and you‚Äôre done.</p>

<h4 id="using-a-key-file">Using a Key File</h4>

<p>To assign a key file to an existing KeePass database, go to the ‚ÄúDatabase‚Äù menu and select ‚ÄúChange master key‚Äù. First, enter your master password twice (if you want to change it you can at this juncture, or just enter your old one).</p>

<p>Now check the check box labeled ‚ÄúKey file‚Äù and then either select an existing file to be your key file, or have KeePassXC create a key file for you. For a variety of reasons I‚Äôd recommend that you have KeePassXC create a key file for you.</p>

<p><img src="/img/keepassxc/keyfile.png" alt="Key file" /></p>

<p>Click the OK button for these changes to take effect. Once you have, KeePassXC will require access to that key file to unlock your database.</p>

<h3 id="challenge-response">Challenge Response</h3>

<p>KeePassXC version 2.2.0 offers support for using a ‚Äútoken‚Äù, like a YubiKey, to unlock your database (also described as ‚ÄúYubiKey challenge-response support‚Äù). A <a href="https://www.yubico.com/">YubiKey</a> is a ‚Äúsmart key‚Äù that plugs into a USB port on your computer and helps you verify your identity. This is that third option for a KeePassXC master key, labeled ‚ÄúChallenge Response‚Äù.</p>

<p>This feature is relatively new to KeePassXC, and does not yet exist in KeePassX. For these reasons I‚Äôm not going to go over how to use it at this time. However if you‚Äôre feeling adventurous, I‚Äôd start with <a href="https://keepassxc.org/docs#faq-yubikey-2fa">this section of the official KeePassXC FAQ</a>.</p>

<hr />

<h2 id="appendix-a-verifying-your-keepassxc-download-without-using-the-command-line">Appendix A: Verifying Your KeePassXC Download Without Using The Command Line</h2>

<p>You should follow these steps <em>after</em> downloading the KeePassXC dmg file, but <em>before</em> you install it. KeePassXC‚Äôs official site now has <a href="https://keepassxc.org/verifying-signatures">pretty good instructions too</a>.</p>

<h3 id="1-download-gpg-suite">1. Download GPG Suite</h3>

<p>Let‚Äôs head over to <a href="https://gpgtools.org/">gpgtools.org</a>. At the time of this writing, there‚Äôs a beta version of this software called ‚ÄúGPG Suite 2017.1‚Äù and a regular version of ‚ÄúGPG Suite‚Äù. If you‚Äôre running macOS Sierra (10.12) or higher, I‚Äôd advise you go with the beta version. If you‚Äôre running an older version of macOS (10.11 or earlier), you should be good with the not beta version.</p>

<p>After downloading the proper version of GPG Suite, install it as you would any other Mac application. The GPG Suite website provides <a href="https://gpgtools.tenderapp.com/kb/how-to/how-to-verify-the-downloaded-gpg-suite">a guide to verifying your GPG Suite download, as well as any downloaded file</a>.</p>

<h3 id="2-download-and-import-the-keepassxc-gpg-public-master-key">2. Download and Import the KeePassXC GPG Public Master Key</h3>

<p>Once GPG Suite is installed, go to <a href="https://keepassxc.org/verifying-signatures">the KeePassXC page on verifying downloads</a>.</p>

<p>We‚Äôre looking to download and import KeePassXC‚Äôs public master key, which should be below the heading ‚ÄúImporting the Public Master Key‚Äù. One way to do this is to find the link in the sentence ‚ÄúManual download from our website and import with gpg‚Äù. Right-click (or control + click on Mac) the link and select ‚ÄúSave Link As‚Ä¶‚Äù and save it to your Downloads folder.</p>

<p><img src="/img/keepassxc/save-master-key-as.png" alt="Download KeePassXC Master Public Key" /></p>

<p>Now open a program called ‚ÄúGPG Keychain‚Äù (it should be part of the GPG Suite we installed earlier). In the top-left, click the ‚ÄúImport‚Äù button and select the master public key file you just downloaded.</p>

<p>If you successfully imported the key, you should get a message to that effect.</p>

<h3 id="3-crosscheck-the-public-master-key-you-downloaded">3. Crosscheck the Public Master Key You Downloaded</h3>

<p>Now, if the KeePassXC website is compromised, this public key could be compromised as well. To mitigate this risk, we‚Äôre going to crosscheck the key you downloaded with other sources. Another one of these sources is <a href="https://twitter.com/KeePassXC">KeePassXC‚Äôs Twitter account</a>: the developers should have a pinned tweet that contains what‚Äôs called a ‚Äúfingerprint‚Äù of their master key, or at least the last 16 characters of the fingerprint.</p>

<p>In GPG Tools, double-click the ‚ÄúKeePassXC Release‚Äù key. In the sidebar that pops up, look for the fingerprint of the key you downloaded ‚Äì it should be 40 characters spaced out in 4-character segments. The last 16 characters of it should match the 16 characters in the pinned tweet exactly.</p>

<p>Another source is <a href="https://github.com/keepassxreboot/keepassxreboot.github.io">the Github repository of the KeePassXC website</a>. The key fingerprint should be displayed somewhere around <a href="https://github.com/keepassxreboot/keepassxreboot.github.io/blob/master/verifying-signatures.html#L86">line 86 of this page</a>.</p>

<p>Once you‚Äôre satisfied that you downloaded and imported the actual key, change the ‚ÄúOwnertrust‚Äù setting to ‚ÄúUltimate‚Äù, via the dropdown menu.</p>

<p><img src="/img/keepassxc/ultimate-trust-dropdown.png" alt="Ultimate trust" /></p>

<h3 id="4-download-the-gpg-signature-of-your-keepassxc-release">4. Download the GPG signature of your KeePassXC Release</h3>

<p>Now, let‚Äôs head back over to <a href="https://keepassxc.org/download">the KeePassXC download page</a>. Click the ‚ÄúmacOS‚Äù tab if it‚Äôs not already highlighted and then click the link called ‚ÄúGPG signature‚Äù. Save this file to your Downloads file, where you downloaded the KeePassXC dmg file earlier. It‚Äôs important that they‚Äôre in the same folder (this folder is likely the Downloads folder).</p>

<p><img src="/img/keepassxc/signature-same-folder.png" alt="Signature next to DMG" /></p>

<h3 id="5-verifying-your-download">5. Verifying your Download</h3>

<p>Now, right-click the .dmg file and go to Services &gt; ‚ÄúOpenPGP: Validate‚Äù. You should get a pop up that says ‚ÄúSigned by: KeePassXC Release <a href="mailto:release@keepassxc.org">release@keepassxc.org</a>‚Äù and then a ‚Äúkey ID‚Äù in parentheses. For us, what‚Äôs critical is that you see ‚Äúultimate trust‚Äù printed at the end of the line. If you do, you‚Äôre good!</p>

<p><img src="/img/keepassxc/signed-ultimate-trust.png" alt="Ultimate trust" /></p>

<!--
** I have commented out this section, rather than delete it, as I'm not 100% that it's redundant. **

But to be even more sure that your download hasn't been altered in any way, we can return to the GPG Keychain application, double click the entry called "KeePassXC Release", and in the window pane that slides out, click the "Subkeys" tab. 

![Comparing keys](/img/keepassxc/comparing-subkeys.png)

Here we'll check that the fingerprint you got in your Verification Results dialog matches one of the Subkeys of the KeePassXC Release public key. If it matches one of them, you can be even more confident your KeePassXC download has not been tampered with. 
-->

<p>Congratulations! Now you can install KeePassXC more confident that your downloaded file has not been tampered with!</p>

<p><em>Again, if you spot any errors or have any suggestions for this post, feel free to contact me via <a href="https://twitter.com/sts10">Twitter</a> or <a href="https://gist.github.com/sts10/4a4e01021b3a5ad42e9b73e0abd7b7e3">elsewhere</a>.</em></p>

<h2 id="appendix-b-advanced-setting-the-number-of-transform-rounds-yourself">Appendix B: Advanced: Setting the number of transform rounds yourself</h2>

<p>This section attempts to give an explanation of the encryption settings we chose when creating our first KeePass database.</p>

<p>As of KeePassXC version 2.4.0, the default, basic encryption settings create a database that takes one second for their machine to decrypt. We want this process to take more than a few milliseconds, because it‚Äôs also the speed that an attacker would have to spend on each guess of our master password (assuming they were using a computer similar to ours).</p>

<p><img src="/img/keepassxc/encryption-settings.png" alt="Basic encryption settings" /></p>

<p>If you accepted the default settings, you‚Äôre fine. If you want to learn a little more about transform rounds, read on.</p>

<p>The basic idea here is that we want to create a time delay for every master password guess. If we can slow down the process such that it takes roughly one second per guess, we‚Äôll be able to hamper a brute force dictionary attack, in which an attacker would systematically guess every possible password.</p>

<p>The way KeePassXC allows for us to create this time delay is to change the way your database is encrypted such that any computer attempting to unlock it will be forced to run your master key through a high number of ‚Äúrounds‚Äù of encryption before actually trying the password they want to try. You can read more about it in <a href="http://www.laurencegellert.com/2015/02/a-keepass-setting-that-might-save-your-online-identity/">this blog post</a>.</p>

<p>How many rounds should you set? Conveniently, KeePassXC has a ‚ÄúBenchmark‚Äù button that tests your current machine to see how many transform rounds it can do in 1 second. It then enters that number in the ‚ÄúTransform rounds‚Äù field for you.</p>

<p>To set the number of transform rounds to this one-second benchmark, with your database unlocked go to the Database menu and select ‚ÄúDatabase settings‚Äù. Then click the ‚ÄúSecurity‚Äù icon from the menu  on the left, click the ‚ÄúEncryption Settings‚Äù tab, and finally click check the ‚ÄúAdvanced Settings‚Äù options in the bottom-left.</p>

<p>To benchmark your system for 1 second, click the ‚ÄúBenchmark 1-second delay‚Äù button, wait one second for the higher number to appear in the form, and hit OK.</p>

<!-- ![Benchmarking transform round](/img/keepassxc/benchmarking.gif) -->
<p><img src="/img/keepassxc/encryption-settings-advanced.png" alt="Benchmarking transform round" /></p>

<p>In the above screenshot, my computer did 17 transform rounds in 1 second, so that is my recommended number of rounds to encrypt my database with. I can click OK to accept that.</p>

<p>Now your database should take about one second to try a master password guess (whether it‚Äôs correct or incorrect). Assuming you, knowing the passphrase, can get it in one or maybe a handful of guesses, this is not much of a delay. But to a program systematically guessing millions of passwords, it can be a road block.</p>
:ET